// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace Llprk.Web.UI.Areas.Store.Controllers
{
    public partial class PayPalController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected PayPalController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Create()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Create);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Confirmed()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Confirmed);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Execute()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Execute);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Paid()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Paid);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Canceled()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Canceled);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult RenderTemplate()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RenderTemplate);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public PayPalController Actions { get { return MVC.Store.PayPal; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "Store";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "PayPal";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "PayPal";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Create = "Create";
            public readonly string Confirmed = "Confirmed";
            public readonly string Execute = "Execute";
            public readonly string Paid = "Paid";
            public readonly string Canceled = "Canceled";
            public readonly string RenderTemplate = "RenderTemplate";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Create = "Create";
            public const string Confirmed = "Confirmed";
            public const string Execute = "Execute";
            public const string Paid = "Paid";
            public const string Canceled = "Canceled";
            public const string RenderTemplate = "RenderTemplate";
        }


        static readonly ActionParamsClass_Create s_params_Create = new ActionParamsClass_Create();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Create CreateParams { get { return s_params_Create; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Create
        {
            public readonly string orderId = "orderId";
        }
        static readonly ActionParamsClass_Confirmed s_params_Confirmed = new ActionParamsClass_Confirmed();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Confirmed ConfirmedParams { get { return s_params_Confirmed; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Confirmed
        {
            public readonly string orderId = "orderId";
            public readonly string token = "token";
            public readonly string payerId = "payerId";
        }
        static readonly ActionParamsClass_Execute s_params_Execute = new ActionParamsClass_Execute();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Execute ExecuteParams { get { return s_params_Execute; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Execute
        {
            public readonly string orderId = "orderId";
            public readonly string token = "token";
            public readonly string payerId = "payerId";
        }
        static readonly ActionParamsClass_Paid s_params_Paid = new ActionParamsClass_Paid();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Paid PaidParams { get { return s_params_Paid; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Paid
        {
            public readonly string orderId = "orderId";
        }
        static readonly ActionParamsClass_Canceled s_params_Canceled = new ActionParamsClass_Canceled();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Canceled CanceledParams { get { return s_params_Canceled; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Canceled
        {
            public readonly string orderId = "orderId";
        }
        static readonly ActionParamsClass_RenderTemplate s_params_RenderTemplate = new ActionParamsClass_RenderTemplate();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_RenderTemplate RenderTemplateParams { get { return s_params_RenderTemplate; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_RenderTemplate
        {
            public readonly string layout = "layout";
            public readonly string templateHtml = "templateHtml";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string Canceled = "Canceled";
                public readonly string Confirmed = "Confirmed";
                public readonly string Paid = "Paid";
            }
            public readonly string Canceled = "~/Areas/Store/Views/PayPal/Canceled.cshtml";
            public readonly string Confirmed = "~/Areas/Store/Views/PayPal/Confirmed.cshtml";
            public readonly string Paid = "~/Areas/Store/Views/PayPal/Paid.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_PayPalController : Llprk.Web.UI.Areas.Store.Controllers.PayPalController
    {
        public T4MVC_PayPalController() : base(Dummy.Instance) { }

        [NonAction]
        partial void CreateOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int orderId);

        [NonAction]
        public override System.Web.Mvc.ActionResult Create(int orderId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Create);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "orderId", orderId);
            CreateOverride(callInfo, orderId);
            return callInfo;
        }

        [NonAction]
        partial void ConfirmedOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int orderId, string token, string payerId);

        [NonAction]
        public override System.Web.Mvc.ActionResult Confirmed(int orderId, string token, string payerId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Confirmed);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "orderId", orderId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "token", token);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "payerId", payerId);
            ConfirmedOverride(callInfo, orderId, token, payerId);
            return callInfo;
        }

        [NonAction]
        partial void ExecuteOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int orderId, string token, string payerId);

        [NonAction]
        public override System.Web.Mvc.ActionResult Execute(int orderId, string token, string payerId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Execute);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "orderId", orderId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "token", token);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "payerId", payerId);
            ExecuteOverride(callInfo, orderId, token, payerId);
            return callInfo;
        }

        [NonAction]
        partial void PaidOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int orderId);

        [NonAction]
        public override System.Web.Mvc.ActionResult Paid(int orderId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Paid);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "orderId", orderId);
            PaidOverride(callInfo, orderId);
            return callInfo;
        }

        [NonAction]
        partial void CanceledOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int orderId);

        [NonAction]
        public override System.Web.Mvc.ActionResult Canceled(int orderId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Canceled);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "orderId", orderId);
            CanceledOverride(callInfo, orderId);
            return callInfo;
        }

        [NonAction]
        partial void RenderTemplateOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, DotLiquid.Template layout, string templateHtml);

        [NonAction]
        public override System.Web.Mvc.ActionResult RenderTemplate(DotLiquid.Template layout, string templateHtml)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RenderTemplate);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "layout", layout);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "templateHtml", templateHtml);
            RenderTemplateOverride(callInfo, layout, templateHtml);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
