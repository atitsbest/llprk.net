@using Llprk.Web.UI.Extensions
<!DOCTYPE html>
@{
    var controllerName = ViewContext.RouteData.Values["Controller"].ToString().ToLower();

    var categoriesActive = controllerName == "categories" ? "active" : null;
    var picturesActive = controllerName == "pictures" ? "active" : null;
    var productsActive = controllerName == "products" ? "active" : null;
    var ordersActive = controllerName == "orders" ? "active" : null;
}
<html lang="en">
<head>
    <meta charset="utf-8" />
    <title>llprk - @ViewBag.Title</title>
    <link href="~/favicon.ico" rel="shortcut icon" type="image/x-icon" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <!--[if lt IE 9]>
            <script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"></script>
            <script src="scripts/innershiv.min.js"></script>
        <![endif]-->
    <link href='http://fonts.googleapis.com/css?family=Pacifico' rel='stylesheet' type='text/css'>

    @Styles.Render("~/Content/admin")
    @Scripts.Render("~/bundles/modernizr")
</head>
<body>
    <header class="container">
        <h2>lillypark</h2>
        <a href="@Url.Action("index", "pictures")" class="@picturesActive">Pictures</a>
        <a href="@Url.Action("index", "products")" class="@productsActive">Products</a>
        <a href="@Url.Action("index", "orders")" class="orders @ordersActive">Orders</a>
        <ul class="orders dropdown-menu" role="menu" aria-labelledby="dropdownMenu">
          <li><a tabindex="-1" href="@Url.Action("index", "orders")">All</a></li>
          <li><a tabindex="-1" href="@Url.Action("index", "orders", new {filter="paid"})">Paid</a></li>
          <li><a tabindex="-1" href="@Url.Action("index", "orders", new {filter="shipped"})">Shipped</a></li>
          <li class="divider"></li>
          <li><a tabindex="-1" href="@Url.Action("index", "orders", new {filter="ready"})">Read to ship</a></li>
          <li><a tabindex="-1" href="@Url.Action("index", "orders", new {filter="overdue"})">Overdue</a></li>
        </ul>
        <a href="@Url.Action("index", "categories")" class="config @categoriesActive">Config</a>
        <ul class="config dropdown-menu" role="menu" aria-labelledby="dropdownMenu">
          <li><a tabindex="-1" href="@Url.Action("index", "categories")">Categories</a></li>
          <li><a tabindex="-1" href="@Url.Action("index", "tags")">Tags</a></li>
          <li><a tabindex="-1" href="@Url.Action("index", "countries")">Countries</a></li>
          <li><a tabindex="-1" href="@Url.Action("index", "shippingcosts")">Shipping Costs</a></li>
          <li class="divider"></li>
          <li><a tabindex="-1" href="@Url.Action("index", "parameters")">Mail messages</a></li>
        </ul>
    </header>

    <div id="main" class="container">
        @RenderSection("featured", required: false)
        <div class="row">
            @RenderBody()
        </div>
    </div>

    <footer>
        <div class="content-wrapper">
            <div class="float-left">
                <p>&copy; @DateTime.Now.Year - lillypark.com</p>
            </div>
        </div>
    </footer>

    @Scripts.Render("~/bundles/admin")
    @RenderSection("scripts", required: false)
    <script>
        CKEDITOR.basePath = '@Url.Content("~/Scripts")/';
        CKEDITOR.replaceAll(function (textarea, config) {
            config.customConfig = '';
            config.autoGrow_onStartup = true;
            config.contentsCss = '';
            config.height = '500px';
            config.toolbarGroups = [
                { name: 'document', groups: ['mode', 'document', 'doctools'] },
                // On the basic preset, clipboard and undo is handled by keyboard.
                // Uncomment the following line to enable them on the toolbar as well.
                // { name: 'clipboard',   groups: [ 'clipboard', 'undo' ] },
                { name: 'editing', groups: ['find', 'selection', 'spellchecker'] },
                { name: 'forms' },
                { name: 'basicstyles', groups: ['basicstyles', 'cleanup'] },
                { name: 'paragraph', groups: ['list', 'indent', 'blocks', 'align'] },
                { name: 'links' },
                { name: 'insert' },
                { name: 'styles' },
                { name: 'colors' },
                { name: 'tools' },
                { name: 'others' }
            ];

            // The default plugins included in the basic setup define some buttons that
            // we don't want too have in a basic editor. We remove them here.
            config.removeButtons = 'Anchor,Underline,Strike,Subscript,Superscript';

            // Considering that the basic setup doesn't provide pasting cleanup features,
            // it's recommended to force everything to be plain text.
            config.forcePasteAsPlainText = true;

            // Let's have it basic on dialogs as well.
            config.removeDialogTabs = 'link:advanced';

            return !$(textarea).hasClass('no-richtext');
        });
    </script>
	@Html.Analytics("UA-41833314-2", "lillypark.com")
</body>
</html>

