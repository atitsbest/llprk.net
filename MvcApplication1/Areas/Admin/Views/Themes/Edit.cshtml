@model Llprk.Application.DTOs.Requests.EditThemeRequest
@using Newtonsoft.Json.Converters
@using Newtonsoft.Json
@{
    ViewBag.Title = @Model.Name;
}


<link href='http://fonts.googleapis.com/css?family=Droid+Sans+Mono' rel='stylesheet' type='text/css'>
<style>
    .files {
        margin-left: 10px;
    }

        .files > li {
            margin-top: 5px;
        }

    .fileactions {
        padding: 5px;
        border-bottom: 1px solid #d8d8d8;
    }

    #editor {
    }

        #editor > .CodeMirror {
            height: 600px;
        }

    .filetree {
        background: #f1f1f1;
        position: fixed;
        top: 71px;
        bottom: 0;
        left: 0;
        z-index: 1000;
        display: block;
        padding: 20px;
        overflow-x: hidden;
        overflow-y: auto; /* Scrollable contents if viewport is shorter than content. */
        background-color: #f5f5f5;
        border-right: 1px solid #eee;
    }

        .filetree .directory {
            margin-bottom: 15px;
        }

            .nav-filetree > li > a > i {
                padding-right: 2px;
            }

    .nav-filetree > li.add-new > a {
        color: #999;
    }

        .nav-filetree > .active > a,
        .nav-filetree > .active > a:hover,
        .nav-filetree > .active > a:focus {
            color: #fff;
            background-color: #428bca;
        }

    .nav > li > a {
        padding: 5px 15px;
        white-space: nowrap;
    }

    .main {
        padding: 0;
    }
</style>

<div class="row">
    <div class="col-sm-3 col-md-2 filetree">
        <h3>@Model.Name</h3>
        <div class="directory" data-bind="template: { name: 'templateFile', data: { name: 'Layouts', items: layouts } }"></div>
        <div class="directory" data-bind="template: { name: 'templateFile', data: { name: 'Assets', items: assets } }"></div>
        <div class="directory" data-bind="template: { name: 'templateFile', data: { name: 'Templates', items: templates } }"></div>
        <div class="directory" data-bind="template: { name: 'templateFile', data: { name: 'Snippets', items: snippets } }"></div>
    </div>
    <div class="col-sm-9 col-sm-offset-3 col-md-10 col-md-offset-2 main">
        <ul class="nav nav-tabs" role="tablist" data-bind="foreach: openFiles">
            <li role="presentation" data-bind="css: { active: $root.currentFile() === $data }">
                <a data-bind="click:$root.currentFile, attr: { href: '#'+handle }" style="display:inline-block;">
                    <span data-bind="text:name"></span>
                    <i class="glyphicon glyphicon-remove text-muted" data-bind="click:$parent.closeFileTab.bind($data, $data)"></i>
                </a>
            </li>
        </ul>
        <div class="tab-content" data-bind="foreach: openFiles">
            <div role="tabpanel" class="tab-pane" data-bind="css: {active: $root.currentFile() === $data }, attr: { id: handle },html: content">
            </div>
    </div>
</div>    

<script type="text/template" id="templateFile">
    <i class="glyphicon glyphicon-folder-open"></i>
    <strong data-bind="text:name"></strong>
    <ul class="nav nav-filetree">
        <li class="add-new">
            <a href="#">
                <i class="glyphicon glyphicon-plus"></i>
                <span>Neue Datei</span>
            </a>
        </li>
        <!-- ko foreach: items -->
        <li data-bind="css: {active: $root.currentFile() === $data}">
            <a data-bind="click:$root.openFileInTab.bind($data, $data), attr: { href: '#/' + $parent.name + '/' + name }">
                <i data-bind="attr: { 'class': $root.iconFromMimetype($data) }"></i>
                <span data-bind="text:name"></span>
            </a>
        </li>
        <!-- /ko -->
    </ul>
</script>

@section scripts {
    <script type="text/javascript">
        require(["app/themes/edit"], function (main) {
            main({
                themeName: '@Model.Name',
                itemContentUrl: '@Url.Action(MVC.Admin.Themes.Content())',
                items: @Html.Raw(JsonConvert.SerializeObject(Model, System.Web.Http.GlobalConfiguration.Configuration.Formatters.JsonFormatter.SerializerSettings))
                });
        });
    </script>
}
