@model Llprk.Application.DTOs.Requests.EditThemeRequest
@using Newtonsoft.Json.Converters
@using Newtonsoft.Json
@{
    ViewBag.Title = @Model.Name;
}


<link href='http://fonts.googleapis.com/css?family=Droid+Sans+Mono' rel='stylesheet' type='text/css'>
<style>
    .files {
        margin-left: 10px;
    }

        .files > li {
            margin-top: 5px;
        }

    .fileactions {
    }

    #editor {
    }

        #editor > .CodeMirror {
            height: 600px;
        }

    .filetree {
        position: fixed;
        top: 71px;
        bottom: 0;
        left: 0;
        z-index: 1000;
        display: block;
        padding: 20px;
        overflow-x: hidden;
        overflow-y: auto; /* Scrollable contents if viewport is shorter than content. */
        background-color: transparent;
        /*border-right: 1px solid #eee;*/
    }

        .filetree .directory {
            margin-bottom: 15px;
            /*color: #f1f1f1;*/
        }

            .filetree .directory .dir-name {
                text-transform: uppercase;
                font-weight: bold;
            }

        .filetree .dropdown-menu {
            min-width: 100px;
            right: 0;
            text-align: left;
            margin-top: -5px;
            left: auto;
        }
            .filetree .dropdown-menu i {
                margin-right: 5px;
            }

    .nav-filetree > li > a > i {
        padding-right: 2px;
    }

    .nav-filetree > li.add-new > a {
        opacity: .25;
    }
    .nav-filetree > li.add-new:hover > a {
        opacity: .5;
    }

    .nav-filetree > li > a:hover {
        /*color: #fff;*/
        /*background: #444;*/
    }

    .nav-filetree > .active > a,
    .nav-filetree > .active > a:hover,
    .nav-filetree > .active > a:focus {
        /*color: #fff;*/
        /*background: #444;*/
    }

    .nav-filetree > li .file-menu {
        display: none;
        top: -20px;
        right: 5px;
    }

    .nav-filetree > li:hover .file-menu {
        display: block;
        position: absolute;
        margin-top: 28px;
    }

    .nav-filetree > li > a {
        opacity: .75;
        padding: 5px 15px;
        white-space: nowrap;
    }


    .main {
        padding: 10px 20px 10px 10px;
    }
</style>

<div class="">
    <div class="col-sm-3 col-md-2 filetree">
        <!-- ko foreach: itemKeys -->
            <div class="directory" data-bind="template: { 
                    name: 'templateFile', 
                    data: { name: $data, items: $parent.items[$data] } 
                }">
            </div>
        <!-- /ko -->
    </div>
    <div class="col-sm-9 col-sm-offset-3 col-md-10 col-md-offset-2 main">
        <h2>
            @Model.Name 
            <a href="@Url.Action(MVC.Store.Shop.Index())?theme=@Model.Name&unpublished=1" target="_blank" class="btn btn-sm btn-warning pull-right">
                Preview
            </a>
        </h2>
        <ul class="nav nav-tabs" role="tablist" data-bind="foreach: openFiles">
            <li role="presentation" data-bind="css: { active: $root.currentFile() === $data }">
                <a data-bind="click:$root.currentFile, attr: { href: '#'+handle }" style="display:inline-block;">
                    <span data-bind="text:name"></span>
                    <i class="glyphicon glyphicon-remove text-muted" data-bind="click:$parent.closeFileTab.bind($data, $data)"></i>
                </a>
            </li>
        </ul>
        <div class="panel panel-default" style="border-top:none;">
            <div class="panel-body" style="padding:0;">
                <div class="tab-content" data-bind="foreach: openFiles">
                    <div role="tabpanel" class="tab-pane" data-bind="css: {active: $root.currentFile() === $data }, attr: { id: handle },html: content">
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>    

<script type="text/template" id="templateFile">
    @*<i class="glyphicon glyphicon-folder-open"></i>*@
    <small class="dir-name" data-bind="text:name"></small>
    <ul class="nav nav-filetree">
        <li class="add-new">
            <a href="" data-bind="click:$root.addItem.bind($data)">
                <i class="glyphicon glyphicon-plus-sign"></i>
                <span>Add item...</span>
            </a>
        </li>
        <!-- ko foreach: items -->
        <li data-bind="css: {active: $root.currentFile() === $data}">
            <a data-bind="attr: { href: '#/' + $parent.name + '/' + name() }">
                <i data-bind="attr: { 'class': $root.iconFromMimetype($data) }"></i>
                <span data-bind="click:$root.openFileInTab.bind($data, $data), text:name"></span>
            </a>

                <i class="glyphicon glyphicon-option-vertical file-menu" data-toggle="dropdown"></i>
                <ul class="dropdown-menu">
                      <li>
                          <a href="#" data-bind="click:$root.renameItem.bind($parent, $parent, $data)">
                              <i class="glyphicon glyphicon-retweet"></i>
                            Rename
                          </a>
                      </li>
                      <li>
                          <a href="#" data-bind="click:$root.deleteItem.bind($parent, $parent, $data)">
                              <i class="glyphicon glyphicon-trash"></i>
                              Delete
                          </a>
                      </li>
                </ul>
        </li>
        <!-- /ko -->
    </ul>
</script>

@section scripts {
    <script src="@Url.Content("~/Scripts/jquery.signalR-2.2.0.min.js")"></script>
    <script src="@Url.Content("~/signalr/hubs")"></script>
    <script type="text/javascript">
        require(["app/themes/edit"], function (main) {
            main({
                themeName: '@Model.Name',
                itemContentUrl: '@Url.Action(MVC.Admin.Themes.Content())',
                createItemUrl: '@Url.Action(MVC.Admin.Themes.CreateItem())',
                deleteItemUrl: '@Url.Action(MVC.Admin.Themes.DeleteItem())',
                renameItemUrl: '@Url.Action(MVC.Admin.Themes.RenameItem())',
                items: @Html.Raw(JsonConvert.SerializeObject(Model, System.Web.Http.GlobalConfiguration.Configuration.Formatters.JsonFormatter.SerializerSettings))
                });
        });
    </script>
}
