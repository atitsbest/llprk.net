@model Llprk.Web.UI.Areas.Admin.Models.TaxIndex
@using Newtonsoft.Json.Converters
@using Newtonsoft.Json
@{
    ViewBag.Title = "New";
}
<div class="row">
    <div class="col-xs-3">
        <h3>Tax settings</h3>
        <p class="text-muted">
            How taxes are supplied.
        </p>
    </div>
    <div class="col-xs-9">
    </div>
</div>
<hr />
<div class="row">
    <div class="col-xs-3">
        <h3>Tax by country</h3>
        <p class="text-muted">
            You can add additional countries in the <a href="@Url.Action("index", "countries")">Country settings</a>.
            Taxes will be choosen be the delivery address.
        </p>
    </div>
    <div class="col-xs-9">
        <div class="panel panel-default">
            <div class="panel-body" data-bind="foreach:countries">
                <div class="row">
                    <div class="col-xs-3">
                        <a data-bind="attr: { href: '@Url.Action("edit", "countries")/id' }"><strong data-bind="text:name"></strong></a>
                    </div>
                    <div class="col-xs-2">
                        <div class="input-group">
                            <input type="text" class="form-control text-right" placeholder="0,00" data-bind="value:taxPercent">
                            <div class="input-group-addon"> % </div>
                        </div>
                    </div>
                    <div class="col-xs-2">
                        <a href="#" class="btn btn-default" data-bind="click:$parent.changeCountryTax.bind($data, $data)">Change...</a>
                    </div>
                </div>
                <hr />
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script type="text/javascript">
        require(["app/taxes/index"], function (main) {
            main({
                changeCountryTaxUrl: '@Url.Action(MVC.Admin.Taxes.Update())',
                countries: @Html.Raw(JsonConvert.SerializeObject(Model.Countries, System.Web.Http.GlobalConfiguration.Configuration.Formatters.JsonFormatter.SerializerSettings))
            });
        });
    </script>
}
